var segchar16 =
    { bit_count: 16,
      coords: [
	  [5, 1, 6, 0, 8, 0, 9, 1, 8, 2, 6, 2],        //a2
	  [5, 9, 6, 10, 6, 16, 5, 17, 4, 16, 4, 10],   //i
	  [6, 10, 7, 10, 8, 15, 8, 16, 7, 16, 6, 11],  //l
	  [4, 10, 4, 11, 3, 16, 2, 16, 2, 15, 3, 10],  //m
	  [2, 2, 3, 2, 4, 7, 4, 8, 3, 8, 2, 3],        //j
	  [8, 2, 8, 3, 7, 8, 6, 8, 6, 7, 7, 2],        //k
	  [5, 1, 6, 2, 6, 8, 5, 9, 4, 8, 4, 2],        //h
	  [9, 17, 8, 18, 6, 18, 5, 17, 6, 16, 8, 16],  //d2
	  [1, 1, 2, 0, 4, 0, 5, 1, 4, 2, 2, 2],        //a1
	  [9, 1, 10, 2, 10, 8, 9, 9, 8, 8, 8, 2],      //b *
	  [1, 9, 0, 8, 0, 2, 1, 1, 2, 2, 2, 8],        //f *
	  [1, 9, 2, 8, 4, 8, 5, 9, 4, 10, 2, 10],      //g1
	  [5, 9, 6, 8, 8, 8, 9, 9, 8, 10, 6, 10],      //g2
	  [1, 17, 0, 16, 0, 10, 1, 9, 2, 10, 2, 16],   //e *
	  [9, 9, 10, 10, 10, 16, 9, 17, 8, 16, 8, 10], //c *
	  [5, 17, 4, 18, 2, 18, 1, 17, 2, 16, 4, 16],  //d1 *
	  []
      ],
      width: 10,
      height: 18,
      hgap: 2,
      vgap: 2,

      //ascii_map originally from https://ketturi.kapsi.fi/2013/08/vfd-schematics-code-witchcraft/
      //TODO 2 pay attrition or something
      ascii_map: [
	  0b0000000000000000 , //NUL Null \0 ^@      (null charter, but shows as empty block dunno)
	  0b1111111111111111 , //can be used like test charter lighting all segments
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 ,
	  0b0000000000000000 , 
	  0b0000000000000000 , //ACK Acknowledge     (send for data successfully received)
	  0b0000000000000000 , //BEL  Bell \a ^G     (make audible notification for email etc)
	  0b0000000000000000 , //BS Backspace \b ^H  (remove last charter from textBuffer)
	  0b0000000000000000 , 
	  0b0000000000000000 , //LF Linefeed \n ~J   (clear textBuffer)
	  0b0000000000000000 , 
	  0b0000000000000000 , //FF Formfeed \f ^L   (clear textBuffer, for compatibly)
	  0b0000000000000000 , //CR Carriage return \r ^M (Return "cursor" to first digit)
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , //DC1 Device control (Turn leds on/off or sumthing)
	  0b0000000000000000 , //DC2
	  0b0000000000000000 , //DC3
	  0b0000000000000000 , //DC4
	  0b0000000000000000 , //NAK neg. acknowledge (Houston, we have problem)
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , //ESC Escape \e ^[     (dunno, not needed)
	  0b0000000000000000 ,  
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , 
	  0b0000000000000000 , //" " space or empty block
	  0b0100001010000000 , //"!"
	  0b0000010001000000 , //"
	  0b1101101011000010 , //#
	  0b1101110111000011 , //$
	  0b0100010000101000 , //%
	  0b1110100111010100 , //&
	  0b0000000000100000 , //'
	  0b0000000000100100 , //(
	  0b0000000000011000 , //)
	  0b0001100001111110 , //*
	  0b0001100001000010 , //+
	  0b0000000000001000 , //,
	  0b0001100000000000 , //-
	  0b0000000010000000 , // "." 
	  0b0000000000101000 , // "/"
	  0b1110011110101001 , //"0" 
	  0b0100001000000000 , //"1"
	  0b1011101110000001 , //2
	  0b1101101110000001 , //3
	  0b0101111000000000 , //4
	  0b1101110110000001 , //5
	  0b1111110110000001 , //6
	  0b0100001100000001 , //"7"
	  0b1111111110000001 , //8
	  0b1101111110000001 , //"9"
	  0b0000000001000010 , //:
	  0b0000000001001000 , //;
	  0b0000000000100100 , //<
	  0b1001100010000000 , //=
	  0b0000000000011000 , //>
	  0b0001001100000011 , //"?"
	  0b1110101110000011 , //@
	  0b0111111100000001 , //"A"
	  0b1101001111000011 , 
	  0b1010010110000001 , 
	  0b1100001111000011 , 
	  0b1010110110000001 , 
	  0b0010110100000001 , 
	  0b1111010110000001 , 
	  0b0111111000000000 , 
	  0b1000000111000011 , 
	  0b1110001010000000 , 
	  0b0010110000100100 , 
	  0b1010010010000000 , 
	  0b0110011000110000 , 
	  0b0110011000010100 , 
	  0b1110011110000001 , 
	  0b0011111100000001 , 
	  0b1110011110000101 , 
	  0b0011111100000101 , 
	  0b1101000110010001 , 
	  0b0000000101000011 , 
	  0b1110011010000000 , 
	  0b0010010000101000 , 
	  0b0110011000001100 , 
	  0b0000000000111100 , 
	  0b0000000000110010 , 
	  0b1000000110101001 , //"Z"
	  0b1010010110000001 , //[
	  0b0000000000010100 , // \ '\\'
	  0b1100001110000001 , // ]
	  0b0000000000001100 , // ^
	  0b1000000010000000 , // _
	  0b0000000000010000 , // `
	  0b1010100010000010 , //"a"
	  0b1010110010000100 , 
	  0b1011100010000000 , 
	  0b1101001010001000 , 
	  0b1010100000001000 , //"e"
	  0b0010110100000000 , 
	  0b1101001010100000 , 
	  0b0010110000000010 , 
	  0b0000000000000010 ,//"i"
	  0b0100000010000000 , 
	  0b0000000001100110 , 
	  0b0010010000000000 , 
	  0b0111100000000010 ,//m
	  0b0010100000000010 , 
	  0b1111100010000000 , 
	  0b0010110000010000 , 
	  0b0101001000100000 , 
	  0b0010100000000000 , 
	  0b0001000010000100 ,//s
	  0b0001100011000010 , 
	  0b1110000010000000 , 
	  0b0100000000000100 , 
	  0b0110000000001100 , 
	  0b0001100000001100 , 
	  0b0100000010000100 , 
	  0b1000100000001000 , //"z"
	  0b1000100110011001 , // {
	  0b0000000001000010 , // |
	  0b1001000110100101 , // }
	  0b0000010000110000 , // ~
	  0b1111111101111110 ] //DEL    (also not needed, ignored charter"
    }
